!function(){"use strict";async function t(){!function(){const t="editorjs-modal-style";if(document.getElementById(t))return;const n=document.createElement("style");n.id=t,n.textContent="\n    .editorjs-modal-overlay {\n      position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;\n      background: rgba(0,0,0,0.5); z-index: 9999;\n      display: flex; justify-content: center; align-items: center;\n    }\n    .editorjs-modal-content {\n      width: 80vw; height: 80vh; background: #fff; border-radius: 8px;\n      padding: 20px; position: relative; display: flex; flex-direction: column;\n    }\n    .editorjs-modal-btnbar {\n      text-align: right; margin-top: 16px; position: absolute;\n      right: 40px; bottom: 40px; z-index: 10000;\n    }\n    .editorjs-modal-btnbar button {\n      margin-left: 12px; padding: 6px 18px; border-radius: 4px; border: none;\n      background: #07c160; color: #fff; font-size: 14px; cursor: pointer;\n    }\n    .editorjs-modal-btnbar button:last-child {\n      background: #ccc; color: #333;\n    }\n  ",document.head.appendChild(n)}();const t=document.createElement("div");t.className="editorjs-modal-overlay";const n=document.createElement("div");n.className="editorjs-modal-content";const e=document.createElement("div");e.id="editorjs-container",e.style.flex="1 1 auto",n.appendChild(e);const o=document.createElement("div");o.className="editorjs-modal-btnbar";const i=document.createElement("button");i.textContent="插入";const r=document.createElement("button");r.textContent="取消",o.appendChild(i),o.appendChild(r),n.appendChild(o),t.appendChild(n),document.body.appendChild(t);const a=n=>{"Escape"===n.key&&(t.remove(),window.removeEventListener("keydown",a))};window.addEventListener("keydown",a),t.addEventListener("click",(n=>{n.target===t&&(t.remove(),window.removeEventListener("keydown",a))}));try{await new Promise(((t,n)=>{chrome.runtime.sendMessage("inject_editorjs_bundle",(e=>{e&&"injected"===e.status?setTimeout(t,0):n(new Error("EditorJS bundle 注入失败"))}))}))}catch(c){return alert("有依赖脚本加载失败，请检查控制台日志"),void t.remove()}if(console.log("[flowedit] window.EditorJS:",window.EditorJS,typeof window.EditorJS),console.log("[flowedit] window.Header:",window.Header,typeof window.Header),console.log("[flowedit] window.Paragraph:",window.Paragraph,typeof window.Paragraph),!window.EditorJS||!window.Header||!window.Paragraph)return alert("编辑器依赖加载失败，请检查本地js文件！"),void t.remove();e.style.border="2px solid red";const d=new window.EditorJS({holder:"editorjs-container",tools:{header:window.Header,paragraph:{class:window.Paragraph,inlineToolbar:!0}},data:{blocks:[{type:"header",data:{text:"测试标题",level:2}},{type:"paragraph",data:{text:"输入你的内容..."}}]}});return d.isReady.then((()=>{console.log("[flowedit] EditorJS is ready");const t=document.getElementById("editorjs-container");console.log("[flowedit] #editorjs-container children:",t?t.children:null)})),new Promise(((n,e)=>{i.onclick=async()=>{try{const e=await d.save();t.remove(),window.removeEventListener("keydown",a),n(e)}catch(c){alert("获取内容失败")}},r.onclick=()=>{t.remove(),window.removeEventListener("keydown",a),e("用户取消")}}))}!function(){const t="my-extension-styles";if(!document.getElementById(t)){const n=document.createElement("style");n.id=t,n.textContent="\n      /* 重置所有扩展元素的默认样式 */\n      .my-ext-btn, .my-ext-switch {\n        all: unset !important;\n        display: inline-block !important;\n        height: 22px !important;\n        margin: 1px 4px !important;\n        vertical-align: middle !important;\n        cursor: pointer !important;\n      }\n      /* 智能插入按钮样式 */\n      .my-ext-smart-btn {\n        background-color: #07c160 !important;\n        color: white !important;\n        border-radius: 4px !important;\n        padding: 0 12px !important;\n        font-size: 12px !important;\n        line-height: 22px !important;\n      }\n      /* Switch开关样式 */\n      .my-ext-switch {\n        position: relative !important;\n        width: 40px !important;\n      }\n      .my-ext-switch-track {\n        position: absolute !important;\n        top: 0 !important;\n        left: 0 !important;\n        right: 0 !important;\n        bottom: 0 !important;\n        background-color: #ccc !important;\n        border-radius: 11px !important;\n        transition: background-color 0.3s !important;\n      }\n      .my-ext-switch-thumb {\n        position: absolute !important;\n        width: 18px !important;\n        height: 18px !important;\n        left: 2px !important;\n        bottom: 2px !important;\n        background-color: white !important;\n        border-radius: 50% !important;\n        transition: transform 0.3s !important;\n      }\n      .my-ext-switch.on .my-ext-switch-track {\n        background-color: #07c160 !important;\n      }\n      .my-ext-switch.on .my-ext-switch-thumb {\n        transform: translateX(18px) !important;\n      }\n    ",document.head.appendChild(n)}}();const n=document.getElementById("js_toolbar_0");n&&(n.insertBefore(function(){const t=document.createElement("div");t.className="my-ext-switch",t.innerHTML='\n    <div class="my-ext-switch-track"></div>\n    <div class="my-ext-switch-thumb"></div>\n  ';let n=!1;return t.addEventListener("click",(()=>{n=!n,t.classList.toggle("on",n);const e=document.getElementById("js_side_article_list");e&&(e.style.display=n?"none":"block")})),t}(),n.firstChild),n.appendChild(function(){const n=document.createElement("button");return n.className="my-ext-btn my-ext-smart-btn",n.textContent="智能插入",n.addEventListener("click",(async()=>{try{const n=((await t()).blocks||[]).map((t=>"header"===t.type?`<h${t.data.level}>${t.data.text}</h${t.data.level}>`:"paragraph"===t.type?`<p>${t.data.text}</p>`:"")).join(""),e=document.querySelector("#ueditor_0 .ProseMirror");e&&(e.innerHTML+=n)}catch(n){}})),n}()))}();
